<?php

/**
 * @file
 * Assigns a sign-up'd user a registration code to send invites.
 */

/**
 * Session names.
 */
define('FM_INVITE_SESSION', 'invite_code');
define('FM_INVITE_CONFIRM_PATH', 'intro/thankyou');

function fm_invite_menu() {
	
	$items['invite'] = array(
    'page callback' => 'fm_invite_accept',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  $items['invite/%reg_code'] = array(
    'page callback' => 'fm_invite_accept',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  
  $items['invite/facebook'] = array(
    'page callback' => 'fm_invite_facebook',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  $items['admin/fadmashion/invite'] = array(
    'page callback' => 'fm_invite_list',
    'access arguments' => array('administer invite list'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function fm_invite_permission() {
  return array(
    'administer invite list' => array(
      'title' => t('View Invite List'),
    ),
  );
}

/**
 * Implements hook_mail().
 */
function fm_invite_mail($key, &$message, $params) {
  $message['module'] = 'fm_invite';
  $message['key'] = $key;
  $message['subject'] = $params['subject'];
  $message['body'] = $params['reg_url'];
  return $message;
}

/**
 * Implements hook_theme().
 */
function fm_invite_theme() {
 return array(
    'fm_invite_share' => array(
      'variables' => array('reg_code_url' => ''),
      'template' => 'fm_invite_share'
    ),
  );
}

/**
 * Allow other modules to control access to forms opening in Colorbox.
 *
 * Implements hook_colorbox_form_access().
 *
 * @param $form_id
 *   The unique string identifying the current form.
 */
function fm_invite_colorbox_form_access($form_id) {
  $access = FALSE;

  if ($form_id == 'fm_invite_send_email_form') {
    return true;
  }

  return $access;
}
  
function fm_invite_request_form() {
 
	drupal_add_library('jquery_plugin', 'validate');
	
	$form['mail'] = array(
    '#type' => 'textfield', 
    '#size' => 25, 
	  '#maxlength' => 255,
    '#default_value' => t('Enter E-mail Address'), 
    '#required' => TRUE,
		'#prefix' => '<div id="form_message"></div>'
  );
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Submit')
  );
  
  return $form;
}

function fm_invite_request_form_validate($form, &$form_state) {
 if (!valid_email_address($form_state['values']['mail'])) {
    form_set_error('mail', t('Please enter a valid e-mail address.'));
    return;
 }
 
 $result = db_query('SELECT * FROM {fm_invite} WHERE email = :mail', array(':mail' => $form_state['values']['mail']));
 $obj = $result->fetchObject();
 if($obj) {
  drupal_goto(FM_INVITE_CONFIRM_PATH, array('query' => array('id' => $obj->id)));
 }
 
}

function fm_invite_request_form_submit($form, &$form_state) {
    
	$referred_by_id = null;
	if($inviter = fm_invite_load_from_session()) {
	 	$referred_by_id = $inviter->id;
	}
	
	$reg_code = fm_invite_generate_code();
	$id = db_insert('fm_invite')
    ->fields(array(
      'reg_code' => $reg_code,
      'referred_by_id' => $referred_by_id,
      'email' => $form_state['values']['mail'],
      'timestamp' => time(),
    ))
  ->execute();
    
  if(isset($_SESSION[FM_INVITE_SESSION])) {
	  unset($_SESSION[FM_INVITE_SESSION]);
  } 
  
  // Send the confirmation email.
  $params = array(
    'subject' => 'Fadmashion pre-launch confirmation: Getting started',
    'reg_url' => url('invite/'.$reg_code, array('absolute' => TRUE)),
  );
  
  drupal_mail(
      'fm_invite',
      'test',
      $form_state['values']['mail'],
      language_default(),
      $params,
      'FadMashion <admin@fadmashion.com> '
   ); 
	
	drupal_goto(FM_INVITE_CONFIRM_PATH, array('query' => array('id' => $id)));
}

function fm_invite_send_email_form() {
	
	$form['name'] = array(
    '#type' => 'textfield', 
    '#size' => 25, 
	  '#maxlength' => 255,
    '#title' => t('From').':',
	  '#default_value' => 'Enter Full Name', 
  );
  
  $form['to'] = array(
    '#type' => 'textfield', 
    '#size' => 25, 
	  '#maxlength' => 255,
    '#title' => t('To').':', 
    '#default_value' => 'Comma seperated e-mail addresses',
    '#required' => TRUE,
  );
  
  $form['message'] = array(
    '#type' => 'textarea', 
    '#row' => 4, 
    '#title' => t('Message').':',
    '#required' => TRUE
  );
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Submit'),
  
  );
  
  return $form;
}

function fm_invite_send_email_form_submit() {
	
}

function fm_invite_share_info() {
	$reg_code_url = fm_invite_get_invite_url();
	return theme('fm_invite_share', array('reg_code_url' => $reg_code_url));
}

function fm_invite_get_invite_url() {
  if(isset($_GET['id'])) {
		$id = $_GET['id'];
	  $result = db_query('SELECT * FROM {fm_invite} WHERE id = :id', array(':id' => $id));
	  $inviter = $result->fetchObject();
	  $reg_code_url =  url('invite/'.$inviter->reg_code, array('absolute' => TRUE));
	  return $reg_code_url;
	}
	else {
		drupal_goto();
	}
	
}


function fm_invite_facebook() {
  $user_message = t('Check out my latest comment on !site...',
                        array('!site' => variable_get('site_name', t('my Drupal for Facebook powered site'))));
  $attachment = array(
        'name' => 'share the love',
        'href' => url('node/1'),
        'description' => 'blah blah blah',
        //'properties' => array(t('In reply to') => array('text' => $node->title, 'href' => url("node/" . $node->nid, array('absolute' => TRUE)))),
  );
  
  if ($logo_path = theme_get_setting('logo_path')) {
        $url = url($logo_path, array('absolute' => TRUE));
        //dpm($logo_path, "logo_path is $logo_path and url is $url");
        $attachment['media'][] = array(
          'type' => 'image',
          'src' => $url,
          'href' => $url,
        );
   }
    
   $actions = array();
      $actions[] = array('text' => t('Read More'),
                         'href' => url('node/1', array('absolute' => TRUE)),
      );
      
      /*fb_stream_publish_dialog(array('message' => $user_message,
                                     'attachment' => $attachment,
                                     'action_links' => $actions,
                               ), 
                               fb_get_app(array('label' => 'fb_fadmashion')));
                               */
    return 'test';
}



function fm_invite_generate_code() {
  do {
    $reg_code = user_password(8);
    $result = db_query("SELECT COUNT(*) FROM {fm_invite} WHERE reg_code = :regcode", array(':regcode' => $reg_code));
  } while ($result->fetchField());

  return $reg_code;
}

function fm_invite_accept($reg_code = '') {
	global $user;
	
	if($reg_code == '') {
		drupal_goto();
	}
	
	$inviter = fm_invite_load($reg_code);
	
	if(!$inviter) {
		drupal_set_message(t("This is not a valid invite code"), 'error');
	}
  else {
  	fm_invite_update_page_views($inviter);
    $_SESSION[FM_INVITE_SESSION] = $reg_code;
  }
  drupal_goto();
}

function fm_invite_update_page_views($inviter) {
 //TODO: Update page views code for the inviter;
}


function fm_invite_load($reg_code) {
	$result = db_query('SELECT * FROM {fm_invite} WHERE reg_code = :reg_code', array(':reg_code' => $reg_code));
	$invite = $result->fetchObject();
  return $invite;
}

/**
 * Returns an invite record from an invite code stored in the user's session.
 *
 * @return
 *   An invite record, or FALSE if there is no invite code stored in the
 *   user's session.
 */
function fm_invite_load_from_session() {
  if (isset($_SESSION[FM_INVITE_SESSION])) {
    return fm_invite_load($_SESSION[FM_INVITE_SESSION]);
  }
  return FALSE;
}


function fm_invite_list() {
	
	$result = db_query('SELECT * FROM {fm_invite}');
	$rows = array();
	$header = array('Name/E-mail', 'Date', 'Invite Code',  'Sign-Ups' );
	
	while($row = $result->fetchObject()) {
		$reg_code_url =  url('invite/'.$row->reg_code, array('absolute' => TRUE));
		$number = db_query("SELECT COUNT(*) FROM {fm_invite} WHERE referred_by_id = :id", array(':id' => $row->id))->fetchField();
		
		$rows[] = array($row->email, format_date($row->timestamp), $reg_code_url, $number);
	}
	
	$output = '<h1>Count: ' . db_query("SELECT COUNT(*) FROM {fm_invite} ")->fetchField().'</h1>'; 
	$output .= theme ('table', array('header' => $header, 'rows' => $rows));
	
	return $output;
	
}
