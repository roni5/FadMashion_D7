<?php

/**
 * @file
 * Assigns a sign-up'd user a registration code to send invites.
 */

/**
 * Session names.
 */
define('FM_INVITE_SESSION', 'invite_code');
define('FM_INVITE_CONFIRM_PATH', 'intro/thankyou');

function fm_invite_menu() {
	
	$items['invite'] = array(
    'page callback' => 'fm_invite_accept',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['invite/%reg_code'] = array(
    'page callback' => 'fm_invite_accept',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['invite/rewards'] = array(
    'title' => t('Fadmashion Rewards'), 
    'page callback' => 'fm_invite_rewards_popup',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['admin/fadmashion/invite'] = array(
    'title' => t('Fadmashion Invite'), 
    'description' => t('Invintation list for Fadmashion\'s Splash page'),
    'page callback' => 'fm_invite_list',
    'access arguments' => array('administer invite list'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'fm_invite.admin.inc',
  );
  $items['admin/fadmashion/invite/%'] = array(
    'page callback' => 'fm_invite_list_detailed',
    'page arguments' => array(3),
    'access arguments' => array('administer invite list'),
    'type' => MENU_CALLBACK,
    'file' => 'fm_invite.admin.inc',
  );
  
  
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function fm_invite_permission() {
  return array(
    'administer invite list' => array(
      'title' => t('View Invite List'),
    ),
  );
}

/**
 * Implements hook_mail().
 */
function fm_invite_mail($key, &$message, $params) {
	$message['module'] = 'fm_invite';
	$message['key'] = $key;
	$message['subject'] = $params['subject'];
	  
	if($key == 'confirmation') {
	  $message['body'] = $params['reg_url'];
	}
	else {
		$message['body'] = $params['message'];
	}
  return $message;
}

/**
 * Implements hook_theme().
 */
function fm_invite_theme() {
 return array(
    'fm_invite_share' => array(
      'variables' => array('reg_code_url' => ''),
      'template' => 'fm_invite_share'
    ),
    'fm_invite_rewards_popup' => array(
      'variables' => array('reg_code_url' => ''),
      'template' => 'fm_invite_rewards_popup'
    ),
  );
}

function fm_invite_twitter_text($reg_code_url = '') {
	if(empty($reg_code_url)) {
		$reg_code_url =  fm_invite_get_invite_url(); 
	}
	$output = '@Fadmashion offering hourly deals on independent fashion.  Sign up and we both get priority access ' . $reg_code_url;
	print $output;
}



function fm_invite_rewards_popup() {
	$id = $_GET['id'];
	
	$output = theme('fm_invite_rewards_popup', reg_code_url);
	print $output;
	exit;
}
/**
 * Implements hook_js_alter().
 */
function fm_invite_js_alter(&$javascript) {
	if(isset($javascript['sites/all/modules/contrib/colorbox/js/colorbox_load.js'])) {
		$javascript['sites/all/modules/contrib/colorbox/js/colorbox_load.js']['data'] = path_to_theme() . '/js/colorbox_load.js';
	}
}

function fm_invite_colorbox_settings_alter(&$settings) {
	$settings['initialWidth'] = 350;
	$settings['initialHeight'] = 200;
	$settings['close'] = '<img src="/' . path_to_theme().'/images/b_close.jpg' . '">';
}

/**
 * Allow other modules to control access to forms opening in Colorbox.
 *
 * Implements hook_colorbox_form_access().
 *
 * @param $form_id
 *   The unique string identifying the current form.
 */
function fm_invite_colorbox_form_access($form_id) {
  $access = FALSE;

  if ($form_id == 'fm_invite_send_email_form') {
    return true;
  }

  return $access;
}
  
function fm_invite_request_form() {
 
	drupal_add_library('jquery_plugin', 'validate');
	
	$form['mail'] = array(
    '#type' => 'textfield', 
    '#size' => 25, 
	  '#maxlength' => 255,
    '#default_value' => t('Enter E-mail Address'), 
    '#required' => TRUE,
		'#attributes' => array('class' => array('clear-defaults')),
  );
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Submit')
  );
  
  return $form;
}

function fm_invite_request_form_validate($form, &$form_state) {
 if (!valid_email_address($form_state['values']['mail'])) {
    form_set_error('mail', t('Please enter a valid e-mail address.'));
    return;
 }
 
 $result = db_query('SELECT * FROM {fm_invite} WHERE email = :mail', array(':mail' => $form_state['values']['mail']));
 $obj = $result->fetchObject();
 if($obj) {
  drupal_goto(FM_INVITE_CONFIRM_PATH, array('query' => array('id' => $obj->id)));
 }
 
}

function fm_invite_request_form_submit($form, &$form_state) {
    
	//Insert the e-mail into the table and generate invite codes
	$referred_by_id = null;
	if($inviter = fm_invite_load_from_session()) {
	 	$referred_by_id = $inviter->id;
	}
	
	$reg_code = fm_invite_generate_code();
	$id = db_insert('fm_invite')
    ->fields(array(
      'reg_code' => $reg_code,
      'referred_by_id' => $referred_by_id,
      'email' => $form_state['values']['mail'],
      'timestamp' => time(),
      'link_back_views' => 0
    ))
  ->execute();
    
  if(isset($_SESSION[FM_INVITE_SESSION])) {
	  unset($_SESSION[FM_INVITE_SESSION]);
  } 
  
  // Send the confirmation email.
  $params = array(
    'subject' => 'Thank you.  Read about our special offer...',
    'reg_url' => url('invite/'.$reg_code, array('absolute' => TRUE)),
  );
  
  $email = variable_get('site_mail', 'admin@fadmashion.com');
  
  drupal_mail(
      'fm_invite',
      'confirmation',
      $form_state['values']['mail'],
      language_default(),
      $params,
      'Fadmashion <' . $email . '> '
   ); 
	
	drupal_goto(FM_INVITE_CONFIRM_PATH, array('query' => array('id' => $id)));
}

function fm_invite_send_email_form() {
	
	$form['name'] = array(
    '#type' => 'textfield', 
    '#size' => 25, 
	  '#maxlength' => 255,
    '#title' => t('From').':',
	  '#attributes' => array('class' => array('clear-defaults')),
	  '#default_value' => 'Enter Name', 
  );
  
  $form['to'] = array(
    '#type' => 'textfield', 
    '#size' => 25, 
	  '#maxlength' => 255,
    '#title' => t('To').':', 
    '#default_value' => 'Comma seperated e-mail addresses',
    '#attributes' => array('class' => array('clear-defaults')),
    '#required' => TRUE,
  );
  
  $form['message'] = array(
    '#type' => 'textarea', 
    '#row' => 4, 
    '#title' => t('Message').':',
    '#default_value' => fm_invite_email_message(),
    '#required' => TRUE
  );
  
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Send'),
    '#attributes' => array('class' => array('ajax-button')),
  
  );
  
  return $form;
}

function fm_invite_send_email_form_submit($form, &$form_state) {
	 
	// Send the confirmation email.
	$reg_code_url = fm_invite_get_invite_url();
  $params = array(
    'subject' => 'Invitation to Independence at Fadmashion',
    'message' => $form_state['values']['message'] . 
                 '<br><br><div style="background-color:#EEEEEE; padding:10px; text-align:center;">' . l('Sign up to Fadmashion', $reg_code_url, array('absolute' => true)) . 
                  '</div><br><br>-'.$form_state['values']['name'] 
  );
  
  //Get the submitted e-mail address for From address
	if(isset($_GET['id'])) {
		$id = $_GET['id'];
	  $email = db_query('SELECT email FROM {fm_invite} WHERE id = :id', array(':id' => $id))->fetchField();
	}
	else {
		$email = variable_get('site_mail', 'admin@fadmashion.com');
	}
	
  drupal_mail(
      'fm_invite',
      'email_friends',
      $form_state['values']['to'],
      language_default(),
      $params,
      $form_state['values']['name']. ' <' . $email . '> '
   ); 
   
   /*SEND SAME TO ADMIN*/
   $params['subject'] = 'Admin Only - Invitation Sent VIA e-mail';
   $params['message'] = 'E-mails sent to: ' . $form_state['values']['to'].'<br><br>' . $params['message'];
   drupal_mail(
      'fm_invite',
      'email_friends',
      'admin@fadmashion.com',
      language_default(),
      $params,
      $form_state['values']['name']. ' <' . $email . '> '
   ); 
   
   exit();
   
}

function fm_invite_email_message() {
	$message = t('Check out this exciting fashion find! I just requested an invitation to Fadmashion\'s upcoming private launch for up to 60% off independent designs. Sign up too and we both get priority access!');
	return $message;
}

function fm_invite_share_info() {
	$reg_code_url = fm_invite_get_invite_url();
	return theme('fm_invite_share', array('reg_code_url' => $reg_code_url));
}

function fm_invite_get_invite_url() {
  if(isset($_GET['id'])) {
		$id = $_GET['id'];
	  $result = db_query('SELECT * FROM {fm_invite} WHERE id = :id', array(':id' => $id));
	  $inviter = $result->fetchObject();
	  if(!$inviter) {
	  	drupal_set_message('Not a valid link', 'error');
	  	drupal_goto();
	  }
	  $reg_code_url =  url('invite/'.$inviter->reg_code, array('absolute' => TRUE));
	  return $reg_code_url;
	}
	else {
		drupal_goto();
	}
}

function fm_invite_generate_code() {
  do {
    $reg_code = user_password(8);
    $result = db_query("SELECT COUNT(*) FROM {fm_invite} WHERE reg_code = :regcode", array(':regcode' => $reg_code));
  } while ($result->fetchField());

  return $reg_code;
}

function fm_invite_accept($reg_code = '') {
	global $user;
	
	if($reg_code == '') {
		drupal_goto();
	}
	
	$inviter = fm_invite_load($reg_code);
	
	if(!$inviter) {
		drupal_set_message(t("This is not a valid invite code"), 'error');
	}
  else {
  	fm_invite_update_page_views($inviter);
    $_SESSION[FM_INVITE_SESSION] = $reg_code;
  }
  drupal_goto();
}

function fm_invite_update_page_views($inviter) {
 //TODO: Update page views code for the inviter;
 db_query('UPDATE {fm_invite} SET link_back_views=link_back_views+1 WHERE id = :id', array(':id' => $inviter->id));
}


function fm_invite_load($reg_code) {
	$result = db_query('SELECT * FROM {fm_invite} WHERE reg_code = :reg_code', array(':reg_code' => $reg_code));
	$invite = $result->fetchObject();
  return $invite;
}

/**
 * Returns an invite record from an invite code stored in the user's session.
 *
 * @return
 *   An invite record, or FALSE if there is no invite code stored in the
 *   user's session.
 */
function fm_invite_load_from_session() {
  if (isset($_SESSION[FM_INVITE_SESSION])) {
    return fm_invite_load($_SESSION[FM_INVITE_SESSION]);
  }
  return FALSE;
}


