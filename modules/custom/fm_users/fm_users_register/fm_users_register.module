<?php 

define('REGISTRATION_NODEQUEUE', 3);

/*
 * implements hook_menu
 */

function fm_users_register_menu(){
  $items['var/%'] = array(
    'page callback' => 'fm_users_register_variable_test',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'page arguments' => array(1),
    'access arguments' => array('view deals'),
  );
  $items['new-user/confirmation'] = array(
    'page callback' => 'fm_users_register_variable_test',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'page arguments' => array(1),
    'access arguments' => array('view deals'),
  );
  return $items;	
}

function fm_users_register_theme(){
	return array(
    'fm_users_register_intro' => array(
	    'template' => 'fm_users_register_intro', 
      'variables' => array(
         'node' => NULL,
	       'login_form' => NULL,
	       'register_form' => NULL
	    )
    ),
    'fm_users_register_confirmation' => array(
      'template' => 'fm_users_register_confirmation',
      'variables' => array(
         'user' => null,
         'invite_form' => null, 
         'invite_url' => NULL  
       ) 
    ),
    'fm_users_register_private' => array(
      'template' => 'fm_users_register_private',
      'variables' => array(
         'user' => null,
         'invite_form' => null, 
         'invite_url' => NULL  
       ) 
    ),
    
  );
}


function fm_users_register_variable_test($test_num) {
	return fm_deals_page();
}


/*
 * implements hook_block_info()
 */
function fm_users_register_block_info() {
	$blocks = array();
	
	//Define the Preview Block
	$blocks['fm_users_register_block'] = array(
	  'info' => t('FM User Registration/Login'),
	  'cache' => DRUPAL_NO_CACHE
	);
	return $blocks;
}

function fm_users_register_block_view($block_name = '') {
	if(arg(0) == 'var') {
		$nodequeue_pos = arg(1);
	} else {
		$nodequeue_pos = 1;
	}
	
	switch ($block_name) {
		case 'fm_users_register_block':
			$content = fm_users_register_display($nodequeue_pos);
			break;
		default:
			break;
	 }
  
	$block = array(
    'content' => $content
  );
  
  return $block;
}

function fm_users_register_display($nodequeue_pos) {
	  
	 drupal_add_js(drupal_get_path('module', 'fm_users_register') . '/fm_users_register.js');
	 $node = fm_users_register_load_node($nodequeue_pos);
	 $register_form = drupal_get_form('user_register_form');
	 $login_form = drupal_get_form('user_login_block');
	 
	 $output = theme('fm_users_register_intro', array('node' => $node, 
	                                                  'login_form' => $login_form, 
	                                                  'register_form' =>  $register_form));
	 
	 return $output; 
}

function fm_users_register_load_node($nodequeue_pos) {
	$nq = nodequeue_nids_visible(REGISTRATION_NODEQUEUE);
	if($nodequeue_pos > count($nq)) {
		drupal_goto();
	}
	$nid = 0;
	for($i = 0; $i < $nodequeue_pos; $i++) {
		$nid = array_shift($nq);
	}
	return node_load($nid);
}

/**
 * Implements hook_form_alter().
 * 
 * changes the user login form to be something else
 */
function fm_users_register_form_alter(&$form, $form_state, $form_id) {
	
  switch ($form_id){
  	case 'user_login_block':  
  		//ADD JS for User validation and AJAXY functionality
  		//drupal_add_js(drupal_get_path('module', 'fm_users').'/fm_users.js');
  		drupal_add_js(path_to_theme().'/js/jquery-ajaxy/scripts/jquery.ajaxy.js');
  		
	    unset($form['name']['#title']);
	    unset($form['pass']['#title']);
	    $form['links']['#markup'] = '<a class="forgotPassword" href="#">Forgot password?</a>';
    	$form['links']['#weight'] = -10;
    	
  	  $form['name']['#default_value'] = t('Email');
  	  $form['name']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['name']['#weight'] = -20;
  	  
  	  $form['name']['#prefix'] = '<div class="text-form-icon-wrapper">';
	    $form['name']['#suffix'] = '<div id="login_loader">
         <img  src="' . pp() . 'confirm-ajax-loader.gif">
         </div></div>';
	    
  	  $form['pass']['#default_value'] = t('Password');
  	  $form['pass']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['pass']['#weight'] = -18;
  	  
 	
  	  $form['pass']['#attributes'] = array('class' => array('clear-defaults'));
  	  
  	  $form['pass-clear'] = array(
  	     '#type' => 'textfield', 
         '#default_value' => t('Password'), 
  	     '#weight' => -19,
  	  );
  	  
      $form['#validate'] =  array('logintoboggan_user_login_validate',  'fm_users_login_name_validate', 'user_login_authenticate_validate', 'user_login_final_validate');
  	
  	  
  	  break;
  	case 'user_register_form':
  		//ADD JS for User validation and AJAXY functionality
  		drupal_add_js(drupal_get_path('module', 'fm_users').'/fm_users.js');
  		drupal_add_library('system', 'effects.slide');
  		
  		unset($form['account']['name']);
  		
  		unset($form['account']['mail']['#title']);
  		unset($form['account']['mail']['#description']);
  		$form['account']['mail']['#default_value'] = t('Email');
  	  $form['account']['mail']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['account']['mail']['#weight'] = -48;
  	  $form['account']['#weight'] = -48;
  		
  		unset($form['account']['pass']['#title']);
  		unset($form['account']['pass']['#description']);
  		$form['account']['pass']['#weight'] = -11;
  		
  		$form['field_first_name']['#weight'] = -50;
  		$form['field_first_name']['und'][0]['value']['#default_value'] = t('First Name');
  		//$form['field_first_name']['#default_value'] = t('First Name');
  	  $form['field_first_name']['und'][0]['value']['#attributes'] = array('class' => array('clear-defaults'));
  		$form['field_last_name']['#weight'] = -49;
  		$form['field_last_name']['und'][0]['value']['#default_value'] = t('Last Name');
  	  $form['field_last_name']['und'][0]['value']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['field_last_name']['#suffix'] = '<div style="clear: both; display: block;margin: 0px; font-size: 1px;"></div>';
  	  
  	  $form['field_tos']['und']['#title'] = t('I agree to the ') . l('terms of service', 'terms-use');
  	  $form['field_newsletter_week']['und']['#title'] = t('Send me the newsletter');
  	  $form['field_tos']['und']['#weight'] = 2;
  	  $form['field_newsletter_week']['und']['#weight'] = 3;
  	  
  	  $form['actions']['submit']['#value'] = t('Sign me up!');
  	  $form['actions']['submit']['#attributes'] = array('class' => array('ajax-button'));
  	 // $form['actions']['submit']['#prefix']  = '<div style="display: none;" class="errorText">Please correct the errors above before proceeding. </div>';
  	  
  	  $form['pass-clear'] = array(
  	     '#type' => 'textfield', 
         '#default_value' => t('Password'), 
  	     '#weight' => 4,
  	  );
  	  $form['pass-confirm-clear'] = array(
  	     '#type' => 'textfield', 
         '#default_value' => t('Confirm Password'), 
  	     '#weight' => 5,
  	  );
  	  
  	  $form['#submit'][] = 'fm_users_register_form_submit';
  	  
  		break;	
  }
  
  drupal_add_js('var base_path = "' . check_plain(url('', array('absolute' =>true))) . '";', 'inline');
}


function fm_users_register_form_submit($form, &$form_state) {
	 	
	global $user;
	
	//check to see if an active e-mail sent.
	$values = $form_state['values'];
	$user = user_load($values['uid']);
	
	//Check to see if active
	if(!fm_users_check_activate($mail)) {
		user_save($user, array('status' => 0));
		$private = TRUE;
	} else {
		user_save($user, array('status' => 1));
		$private = FALSE;
  }
	
	$mail = $user->mail;
	
  $result = db_query('SELECT * FROM {fm_invite} WHERE email = :mail', array(':mail' => $mail));
	$obj = $result->fetchObject();
	
	if(!$obj) {	  
		watchdog('degug', 'insert into invites');
		$referred_by_id = null;
	  if($inviter = fm_invite_load_from_session()) {
    	 	$referred_by_id = $inviter->id;
    	 	watchdog('degug', 'referred by');
	   }
			 $reg_code = fm_invite_generate_code();
	     $id = db_insert('fm_invite')
           ->fields(array(
            'reg_code' => $reg_code,
            'referred_by_id' => $referred_by_id,
            'email' => $mail,
            'timestamp' => time(),
            'link_back_views' => 0
          ))->execute();
   
       if(isset($_SESSION[FM_INVITE_SESSION])) {
	       unset($_SESSION[FM_INVITE_SESSION]);
        } 
  
       
        // Send the confirmation email.
        $params = array(
            'subject' => 'Read about our special offer...',
            'reg_url' => url('invite/'.$reg_code, array('absolute' => TRUE)),
         );
  
        $email = variable_get('site_mail', 'admin@fadmashion.com');
  
        drupal_mail(
           'fm_invite',
           'confirmation',
           $mail,
           language_default(),
           $params,
           'Fadmashion <' . $email . '> '
         );
   
    
		} else {
			$id = $obj->id;
		}
		
		
	  $new_user = TRUE;
	  $invite_form = drupal_get_form('fm_invite_send_email_form', $user, $new_user);
	  $invite_url = fm_invite_get_invite_url($user);
		if(!$private) {
		  print theme('fm_users_register_confirmation', array('user' => $user, 'invite_url' => $invite_url, 'invite_form' => $invite_form));
	  } else {
      print theme('fm_users_register_private', array('user' => $user, 'invite_url' => $invite_url, 'invite_form' => $invite_form));
	    
		}
		
		exit();
}
?>