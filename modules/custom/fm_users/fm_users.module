<?php

function fm_users_menu() {
	
  
  $items['fm_users/auth'] = array(
    'page callback' => 'fm_users_authorize',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['fm_users/email-verify'] = array(
    'page callback' => 'fm_users_email_verify',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;	
}

function fm_users_theme(){
	return array(
    'fm_users_invite_block' => array(
      'template' => 'fm_users_invite_block',
      'variables' => array(
         'user' => null,
         'invite_form' => null, 
         'invite_url' => NULL  
       ) 
    ),
  );
}

function fm_users_fullname($uid = '') {
	if(empty($uid)) {
		global $user;
		$uid = $user->uid;
	}
	
	$user_loaded = user_load($uid);
	if($user_loaded) {
	  $user_entity_wrapper = entity_metadata_wrapper('user', $user_loaded);
	  $first_name = $user_entity_wrapper->field_first_name->value();
    $last_name = $user_entity_wrapper->field_last_name->value();

	  return $first_name . ' ' . $last_name;
	} else {
		return '';
	}
}

function fm_users_firstname($uid = '') {
	if(empty($uid)) {
		global $user;
		$uid = $user->uid;
	}
	
	$user_loaded = user_load($uid);
	if($user_loaded) {
	  $user_entity_wrapper = entity_metadata_wrapper('user', $user_loaded);
	  $first_name = $user_entity_wrapper->field_first_name->value();
	return $first_name;
	} else {
		return '';
	}
}

function fm_users_email_verify() {
  $mail = $_POST['mail'];
  if ($val = db_query("SELECT mail FROM {users} WHERE LOWER(mail) = LOWER(:mail)", array(
      ':mail' => $mail,))->fetchField()) {
      print drupal_json_encode(false);
  }
  else {
  	print drupal_json_encode(true);
  }
  exit();
}
function fm_users_authorize() {
	$username = $_POST['username'];
	$pass = $_POST['pass'];
	
	$uid = user_authenticate($username, $pass);
	
	if($uid) {
	  print drupal_json_encode(true);
	}
	else { 
		if ($name = db_query("SELECT name FROM {users} WHERE LOWER(mail) = LOWER(:name)", array(
      ':name' => $username,))->fetchField()) {
      $uid = user_authenticate($name, $pass);
      
      if($uid) {
      	print drupal_json_encode(true);
      } else {
        print drupal_json_encode(false);
      }
    }
		
	}
	exit();
}


/*
 * implements hook_block_info()
 */
function fm_users_block_info() {
	$blocks = array();
	
	//Define the Preview Block
	$blocks['fm_users_orders'] = array(
	  'info' => t('Account - My Orders'),
	  'cache' => DRUPAL_NO_CACHE
	);
	
	$blocks['fm_users_invite'] = array(
	  'info' => t('Account - Invite Form'),
	  'cache' => DRUPAL_NO_CACHE
	);
	return $blocks;
}

/*
 * Implements hook_block_view
 */
function fm_users_block_view($block_name = '') {
	global $user;
	switch ($block_name) {
		case 'fm_users_orders':
			//$content = theme('fm_commerce_store_owners_orders_admin', array('store' => $store, 'orders' => 'test'));
			$content = fm_commerce_orders_full_list();
				$invite_form = drupal_get_form('fm_invite_send_email_form', $user);
		  $invite_url = fm_invite_get_invite_url($user);
			$content = theme('fm_users_invite_block', array('user' => $user, 'invite_form' => $invite_form, 'invite_url' => $invite_url));
		
			break;
		case 'fm_users_invite':
			$invite_form = drupal_get_form('fm_invite_send_email_form', $user);
		  $invite_url = fm_invite_get_invite_url($user);
			$content = theme('fm_users_invite_block', array('user' => $user, 'invite_form' => $invite_form, 'invite_url' => $invite_url));
			break;
		default:
			break;
	 }
  
	$block = array(
    'content' => $content
  );
  
  return $block;
}





//Generate Username from first and last name.
function fm_users_user_presave (&$edit, $account, $category) {
	// Make sure that our form value 'mymodule_foo' is stored as 'mymodule_bar'.
	//Generate name from registration form
	
	if(!$account->uid && isset($edit['field_first_name']) && isset($edit['field_last_name'])) {
	  $first_name = $edit['field_first_name']['und'][0]['value'];
	  $last_name = $edit['field_last_name']['und'][0]['value'];
	  $edit['name'] = $first_name . ' ' . $last_name;
	  
	  $result = db_query("SELECT COUNT(*) FROM {users} WHERE name = :name", array(':name' => $edit['name']));
    $i = 1;
	  while($result->fetchField()) {
       $new_last_name = $last_name . '_' .$i;
       $edit['name'] = $first_name . ' ' . $new_last_name;
       $result = db_query("SELECT COUNT(*) FROM {users} WHERE name = :name", array(':name' => $edit['name']));
       $i++;
     };
	}
	else { 
	  $fbu = fb_facebook_user();
	  if(isset($fbu)) {
	     //var_dump($edit);
	     $info = $GLOBALS['_fb']->api($fbu);
		   $edit['field_first_name']['und'][0]['value'] = $info['first_name'];
		   $edit['field_last_name']['und'][0]['value'] = $info['last_name'];
		   if(!fm_users_check_activate($info['email'])) {
		     $edit['status'] = 0;
		   }
	  }

	}
}

function fm_users_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    // Move my_module_rdf_mapping() to the end of the list. module_implements()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['fm_users'];
    unset($implementations['fm_users']);
    $implementations['fm_users'] =  $group;
    
  }
}

//special validator to redirect on non-activated account
function fm_users_login_name_validate($form, &$form_state)  {
	 
  if (isset($form_state['values']['name']) && user_is_blocked($form_state['values']['name'])) {
  	
  	if(fm_invite_is_activated()) {
  		$user = user_load_by_name($form_state['values']['name']);
  		user_save($user, array('status' => 1));
  	} else {
      form_set_error('name', t('Sorry, Fadmashion is currently only open for priority members.  You\'ll be hearing from us soon for your account activation'));
  	}
  	
  }
}

function fm_users_check_activate($mail) {
	$result = db_query('SELECT * FROM {fm_invite} WHERE email = :email', array(':email' => $mail));
  $mail = $result->fetchObject();
	if($mail || fm_invite_is_activated() ) {
	  return TRUE;
	}
	else {
		return FALSE;
	}
	
	return FALSE;
}

function fm_users_fb_user($op, $data, $return) {
	if($op == FB_USER_OP_POST_EXTERNAL_LOGIN) {
		if(isset($data['account'])) {
	    $account = $data['account'];
	    $mail = $account->mail;
	   
	    if(!fm_users_check_activate($mail)) {
	      //_fb_logout();
	      //drupal_goto('intro/private');
	      
	    }
		}
	}
}
