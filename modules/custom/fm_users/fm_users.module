<?php

function fm_users_menu() {
	
  
  $items['fm_users/auth'] = array(
    'page callback' => 'fm_users_authorize',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['fm_users/email-verify'] = array(
    'page callback' => 'fm_users_email_verify',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;	
}

function fm_users_fullname($uid = '') {
	if(empty($uid)) {
		global $user;
		$uid = $user->uid;
	}
	
	$user_loaded = user_load($uid);
  $first_name = $user_loaded->field_first_name['und'][0]['value'];
  $last_name = $user_loaded->field_last_name['und'][0]['value'];
	
	return $first_name . ' ' . $last_name;
}

function fm_users_firstname($uid = '') {
	if(empty($uid)) {
		global $user;
		$uid = $user->uid;
	}
	
	$user_loaded = user_load($uid);
  $first_name = $user_loaded->field_first_name['und'][0]['value'];
	
	return $first_name;
}

function fm_users_email_verify() {
  $mail = $_POST['mail'];
  if ($val = db_query("SELECT mail FROM {users} WHERE LOWER(mail) = LOWER(:mail)", array(
      ':mail' => $mail,))->fetchField()) {
      print drupal_json_encode(false);
  }
  else {
  	print drupal_json_encode(true);
  }
  exit();
}
function fm_users_authorize() {
	$username = $_POST['username'];
	$pass = $_POST['pass'];
	
	$uid = user_authenticate($username, $pass);
	
	if($uid) {
	  print drupal_json_encode(true);
	}
	else { 
		if ($name = db_query("SELECT name FROM {users} WHERE LOWER(mail) = LOWER(:name)", array(
      ':name' => $username,))->fetchField()) {
      $uid = user_authenticate($name, $pass);
      
      if($uid) {
      	print drupal_json_encode(true);
      } else {
        print drupal_json_encode(false);
      }
    }
		
	}
	exit();
}

/**
 * Implements hook_form_alter().
 * 
 * changes the user login form to be something else
 */
function fm_users_form_alter(&$form, $form_state, $form_id) {
	
  switch ($form_id){
  	case 'user_login_block':  
  		//ADD JS for User validation and AJAXY functionality
  		drupal_add_js(drupal_get_path('module', 'fm_users').'/fm_users.js');
  		drupal_add_js(path_to_theme().'/js/jquery-ajaxy/scripts/jquery.ajaxy.js');
  		
	    unset($form['name']['#title']);
	    unset($form['pass']['#title']);
	    $form['links']['#markup'] = '<a class="forgotPassword" href="#">Forgot password?</a>';
    	$form['links']['#weight'] = -10;
    	
  	  $form['name']['#default_value'] = t('Email');
  	  $form['name']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['name']['#weight'] = -20;
  	
  	  $form['pass']['#default_value'] = t('Password');
  	  $form['pass']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['pass']['#weight'] = -18;
  	  $form['pass']['#suffix'] = '<div style="clear: both; display: block;margin: 0px; font-size: 1px;"></div>';
  	  
 	
  	  $form['pass']['#attributes'] = array('class' => array('clear-defaults'));
  	  
  	  $form['pass-clear'] = array(
  	     '#type' => 'textfield', 
         '#default_value' => t('Password'), 
  	     '#weight' => -19,
  	  );
  	  
      $form['#validate'] =  array('logintoboggan_user_login_validate',  'fm_users_login_name_validate', 'user_login_authenticate_validate', 'user_login_final_validate');
  	  
  	  break;
  	case 'user_register_form':
  		//ADD JS for User validation and AJAXY functionality
  		drupal_add_js(drupal_get_path('module', 'fm_users').'/fm_users.js');
  		drupal_add_js(path_to_theme().'/js/jquery-ajaxy/scripts/jquery.ajaxy.js');
  		
  		unset($form['account']['name']);
  		
  		unset($form['account']['mail']['#title']);
  		unset($form['account']['mail']['#description']);
  		$form['account']['mail']['#default_value'] = t('Email');
  	  $form['account']['mail']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['account']['mail']['#weight'] = -48;
  	  $form['account']['#weight'] = -48;
  		
  		unset($form['account']['pass']['#title']);
  		unset($form['account']['pass']['#description']);
  		$form['account']['pass']['#weight'] = -11;
  		
  		$form['field_first_name']['#weight'] = -50;
  		$form['field_first_name']['und'][0]['value']['#default_value'] = t('First Name');
  		//$form['field_first_name']['#default_value'] = t('First Name');
  	  $form['field_first_name']['und'][0]['value']['#attributes'] = array('class' => array('clear-defaults'));
  		$form['field_last_name']['#weight'] = -49;
  		$form['field_last_name']['und'][0]['value']['#default_value'] = t('Last Name');
  	  $form['field_last_name']['und'][0]['value']['#attributes'] = array('class' => array('clear-defaults'));
  	  $form['field_last_name']['#suffix'] = '<div style="clear: both; display: block;margin: 0px; font-size: 1px;"></div>';
  	  
  	  $form['field_tos']['und']['#title'] = t('I agree to the ') . l('terms of service', 'terms-use');
  	  $form['field_newsletter_week']['und']['#title'] = t('Sign me up for weekly Deal Reminders');
  	  $form['field_tos']['und']['#weight'] = 2;
  	  $form['field_newsletter_week']['und']['#weight'] = 3;
  	  
  	  $form['actions']['submit']['#value'] = t('Sign me up!');
  	  $form['actions']['submit']['#attributes'] = array('class' => array('red'));
  	  
  	  $form['pass-clear'] = array(
  	     '#type' => 'textfield', 
         '#default_value' => t('Password'), 
  	     '#weight' => 4,
  	  );
  	  $form['pass-confirm-clear'] = array(
  	     '#type' => 'textfield', 
         '#default_value' => t('Confirm Password'), 
  	     '#weight' => 5,
  	  );
  	  
  	  $form['#submit'][] = 'fm_users_register_submit';
  	  
  		break;	
  }F
  
  drupal_add_js('var base_path = "' . check_plain(url('', array('absolute' =>true))) . '";', 'inline');
}

//Generate Username from first and last name.
function fm_users_user_presave (&$edit, $account, $category) {
	// Make sure that our form value 'mymodule_foo' is stored as 'mymodule_bar'.
	
	//Generate name from registration form
	if(isset($edit['field_first_name']) && isset($edit['field_last_name'])) {
	  $first_name = $edit['field_first_name']['und'][0]['value'];
	  $last_name = $edit['field_last_name']['und'][0]['value'];
	  $edit['name'] = $first_name . ' ' . $last_name;
	  
	  //If Duplicate name, generate another username with format "_num"
	  $result = db_query("SELECT COUNT(*) FROM {users} WHERE name = :name", array(':name' => $edit['name']));
    $i = 1;
	  while($result->fetchField()) {
       $new_last_name = $last_name . '_' .$i;
       $edit['name'] = $first_name . ' ' . $new_last_name;
       $result = db_query("SELECT COUNT(*) FROM {users} WHERE name = :name", array(':name' => $edit['name']));
       $i++;
     };
  
	}
	else { 
	  $fbu = fb_facebook_user();
	  if(isset($fbu)) {
	     //var_dump($edit);
	     $info = $GLOBALS['_fb']->api($fbu);
		   $edit['field_first_name']['und'][0]['value'] = $info['first_name'];
		   $edit['field_last_name']['und'][0]['value'] = $info['last_name'];
		   if(!fm_users_check_activate($info['email'])) {
		     $edit['status'] = 0;
		   }
	  }

	}
}

function fm_users_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    // Move my_module_rdf_mapping() to the end of the list. module_implements()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['fm_users'];
    unset($implementations['fm_users']);
    $implementations['fm_users'] =  $group;
    
  }
}

function fm_users_register_submit($form, &$form_state) {
	 
	//check to see if an active e-mail sent.
	$values = $form_state['values'];
	$mail = $values['mail'];
	$user = user_load($values['uid']);
	
	//Check to see if active
	if(!fm_users_check_activate($mail)) {
		user_save($user, array('status' => 0));
		//Redirect here
	  drupal_set_message(t('Fadmashion is currently only open for priority members. You are now in the queue and will receive an email from us when your invitation is prepared.'), 'error');
	} else {
		 user_save($user, array('status' => 1));
     drupal_goto();		
	}
   //check it didn't request an invite, than add it and generate process.  
  $result = db_query('SELECT * FROM {fm_invite} WHERE email = :mail', array(':mail' => $mail));
	$obj = $result->fetchObject();
	
	if(!$obj) {	  
		$referred_by_id = null;
	  if($inviter = fm_invite_load_from_session()) {
    	 	$referred_by_id = $inviter->id;
	   }
			 $reg_code = fm_invite_generate_code();
	     $id = db_insert('fm_invite')
           ->fields(array(
            'reg_code' => $reg_code,
            'referred_by_id' => $referred_by_id,
            'email' => $form_state['values']['mail'],
            'timestamp' => time(),
            'link_back_views' => 0
          ))->execute();
   
       if(isset($_SESSION[FM_INVITE_SESSION])) {
	       unset($_SESSION[FM_INVITE_SESSION]);
        } 
  
       
        // Send the confirmation email.
        $params = array(
            'subject' => 'Thank you.  Read about our special offer...',
            'reg_url' => url('invite/'.$reg_code, array('absolute' => TRUE)),
         );
  
         $email = variable_get('site_mail', 'admin@fadmashion.com');
  
        drupal_mail(
           'fm_invite',
           'confirmation',
           $form_state['values']['mail'],
           language_default(),
           $params,
           'Fadmashion <' . $email . '> '
         );
   
    
		} else {
			$id = $obj->id;
		}
 	
		drupal_goto(FM_INVITE_CONFIRM_PATH, array('query' => array('id' => $id)));
}

//special validator to redirect on non-activated account
function fm_users_login_name_validate($form, &$form_state)  {
	 
  if (isset($form_state['values']['name']) && user_is_blocked($form_state['values']['name'])) {
  	
  	if(fm_invite_is_activated()) {
  		$user = user_load_by_name($form_state['values']['name']);
  		user_save($user, array('status' => 1));
  	} else {
      form_set_error('name', t('Sorry, Fadmashion is currently only open for priority members.  You\'ll be hearing from us soon for your account activation'));
  	}
  	
  }
}

function fm_users_check_activate($mail) {
	$result = db_query('SELECT * FROM {fm_invite} WHERE email = :email', array(':email' => $mail));
  $mail = $result->fetchObject();
	if($mail || fm_invite_is_activated() ) {
	  return TRUE;
	}
	else {
		return FALSE;
	}
	
	return FALSE;
}

function fm_users_fb_user($op, $data, $return) {
	if($op == FB_USER_OP_POST_EXTERNAL_LOGIN) {
		if(isset($data['account'])) {
	    $account = $data['account'];
	    $mail = $account->mail;
	   
	    if(!fm_users_check_activate($mail)) {
	      //_fb_logout();
	      //drupal_goto('intro/private');
	      
	    }
		}
	}
}
