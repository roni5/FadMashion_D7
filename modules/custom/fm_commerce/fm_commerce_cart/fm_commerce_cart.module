<?php

/*
 * implements hook_block_info()
 * 
 * 
 */
//TODO: SEE If we can make this a block from views.
function fm_commerce_cart_block_info() {
	$blocks = array();
	
	//Define the Preview Block
	$blocks['fm_commerce_cart'] = array(
	  'info' => t('FM Order Summary'),
	  'cache' => DRUPAL_NO_CACHE
	);
	return $blocks;
}

function fm_commerce_cart_theme() {
	return array(
    'fm_commerce_cart_line_item' => array(
	     'variables' => array(
         'title' => '',
	       'price' => '',
	       'red' => false
	    )
    ),
  );
}

function theme_fm_commerce_cart_line_item($vars) {
	$title = $vars['title'];
	$price = $vars['price'];
	$red = $vars['red'];
	
	$line_item_val = '<div class="item_wrapper">';
  $line_item_val .= '<div class="item_title">' . $title . '</div>';
  if($price != '$0.00') {
    $line_item_val .= '<div class="item_value ' .($red ? 'red_val' : '') . '">' . $price . '</div>';
  } else {
  	$line_item_val .= '<div class="item_value red_val">FREE</div>';
  }
  
  $line_item_val .= '</div>';
  
  return $line_item_val;
}

/*
 * Implements hook_block_view
 */
function fm_commerce_cart_block_view($block_name = '') {
	drupal_add_js(drupal_get_path('theme', 'fadmashion_commerce').'/js/jquery.scrollfollow.js');
	
  if($block_name == 'fm_commerce_cart') {
  	
  	
  	global $user;
	// First attempt to load the customer's shopping cart order.
  $order = commerce_cart_order_load($user->uid);
  
  
  	$output = '<div class="summary">';
  	$output .= '<div class="header rounded-top">Order Summary #' . $order->order_id. '</div>';
  	
  	
  

  // If no order existed, create one now.
  if (empty($order)) {
  	drupal_set_message('We couldn\'t find your order, please contact the admin for issues', 'error');
    drupal_goto();
  }
  // Wrap the order for easy access to field data.
  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
  
  $product_line_items = array();
  $shipping_line_items = array();
  $discount_line_items = array();
  
  // Loop through the line items looking for products.
  foreach ($order_wrapper->commerce_line_items as $delta => $line_item_wrapper) {
  
  	switch ($line_item_wrapper->type->value()) {
  		case 'product':
  		 $product = $line_item_wrapper->commerce_product->value();
       $title = $product->title;
       $retail_price = $line_item_wrapper->commerce_total->value();
       
       $color = $line_item_wrapper->field_order_color->value();
       $size = $line_item_wrapper->field_order_size->value();
       $product_line_items[] = theme('fm_commerce_cart_line_item', array('title' => $title, 
                                     'price' => commerce_currency_format($retail_price['amount'], $retail_price['currency_code']))
                                    ) . 
                               theme('fm_commerce_orders_extra_info', array('color' => $color, 'size' => $size));
  			break;
  		
  		case 'shipping':
  			$shipping_price = $line_item_wrapper->commerce_total->value();
  			$shipping_line_items[] = theme('fm_commerce_cart_line_item', array('title' => 'Shipping', 
                                     'price' => commerce_currency_format($shipping_price['amount'], $shipping_price['currency_code']),
                                     )
                                    );
  			break;
  		case 	'deals_discount':
  	   // Exit this loop with the $line_item intact so it gets updated.
	     $discount_price = $line_item_wrapper->commerce_total->value();
	     
	     
	     if(isset($line_item_wrapper->field_product_line_item->field_node_reference)) {
	       $node = $line_item_wrapper->field_product_line_item->field_node_reference->value();
	       $discount_time = fm_deals_time($node->nid);
         $discount_line_items[] = theme('fm_commerce_cart_line_item', array('title' => 'Exclusive Discount', 
                                     'price' => commerce_currency_format($discount_price['amount'], $discount_price['currency_code']),
                                     'red' => true)
                                    );
	     }
  		 break;
  		case 	'coupon':
  		 $coupon_id = $line_item_wrapper->commerce_coupon_reference->value();
  		 $coupon = commerce_coupon_load($coupon_id);
  		 $coupon = entity_metadata_wrapper('commerce_coupon', $coupon);
  		 $long_title = $coupon->field_coupon_long_name->value();
  	   $discount_price = $line_item_wrapper->commerce_total->value();
       array_unshift($discount_line_items, theme('fm_commerce_cart_line_item', array('title' => $long_title, 
                                     'price' => commerce_currency_format($discount_price['amount'], $discount_price['currency_code']),
                                     'red' => true)
                                    ));
	     break;
	     
	    case 	'credits_amount':
  	   $credits_price = $line_item_wrapper->commerce_total->value();
  			$discount_line_items[] = theme('fm_commerce_cart_line_item', array('title' => 'Credits', 
                                      'price' => commerce_currency_format($credits_price['amount'], $credits_price['currency_code']),
  			                              'red' => true)
                                    );
  			break;
	     
  	}
  }
  
  $output .= '<div class="pad">';
 
  $output .= fm_deals_preview_get_image($product, $color);
  $output .= implode('', $product_line_items);
  $output .= implode('', $shipping_line_items);
  $output .= implode('', $discount_line_items);
  
  
  if(isset($discount_time)) {
  	$untilTime = date("F d, Y g:i a", $discount_time['end']);
  	
  	$output .= '<div class="alert"><div>Deal expires in <span class="timer-detail">00:00</span></div></div>';
	  jquery_countdown_add(".timer-detail", array("until" =>  $untilTime, 'format' => 'DHMS', "layout" => '{mnn}:{snn}'));
  }
  
  $total = $order_wrapper->commerce_order_total->value();
  $output .= '<div class="total">Total: ';
  $output .=  commerce_currency_format($total['amount'], $total['currency_code'], NULL, true);
  $output .= '</div>';
  
  $output .= render(drupal_get_form('fm_commerce_cart_promo_form'));
    
  $output .='</div>';  //end class="pad"
  $output .= '</div>'; //End class="summary"
  
  
    $block = array(
      'content' => $output
    );
  }
  return $block;
}

/**
 * Payment pane: form callback.
 */
function fm_commerce_cart_promo_form($form, &$form_state) {
  $pane_form = array();

  // Store the payment methods in the form for validation purposes.
  $pane_form['coupon_code'] = array(
    '#type' => 'textfield',
    '#attributes' => array('class' => array('clear-defaults', 'default')),
    '#default_value' => t('Enter Promo Code')
  );
  $pane_form['add_code'] = array(
    '#type' => 'submit',
    '#value' => t('Add'),
    '#attributes' => array('class' => array('green'))
  );

  return $pane_form;
}


function fm_commerce_cart_promo_form_validate($form, &$form_state) {
  //@todo I think global function should start and end with an underscore
  global $commerce_coupon_validation_error_message;

  global $user;
	// First attempt to load the customer's shopping cart order.
  $order = commerce_cart_order_load($user->uid);
  
  // Check if it is empty
  if (empty($form_state['values']['coupon_code'])) {
    return TRUE;
  }

  // Valdiate the coupon code
  if (commerce_coupon_code_is_valid($form_state['values']['coupon_code'], $order)) {
    return TRUE;
  }
  else {
    if (isset($commerce_coupon_validation_error_message)) {
      $message = $commerce_coupon_validation_error_message;
    }
    else {
      $message = t('Your coupon code is not valid.');
    }

    form_set_error('coupon_code', $message);
    return FALSE;
  }

}


function fm_commerce_cart_promo_form_submit($form, &$form_state, $checkout_pane, $order) {
	global $user;
	// First attempt to load the customer's shopping cart order.
  $order = commerce_cart_order_load($user->uid);
  
  if ($code = $form_state['values']['coupon_code']) {
    $commerce_coupon = commerce_coupon_load_by_code($code);
    commerce_coupon_redeem_coupon($commerce_coupon, $order);
     
    // Save the updated order.
    commerce_order_save($order);
    commerce_order_save($order);
     
  }
}



