<?php 
/**
 * Implements hook_schema().
 */
function fm_commerce_store_schema() {
  $schema = array();

  $schema['fm_commerce_store'] = array(
    'description' => "Base table for the fm_commerce_store entity.",
    'fields' => array(
      'store_id' => array(
        'description' => 'The primary identifier of a store.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Human-readable name of the store.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this Store.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether or not the store is Active or Disabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the store was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Weight of shop within format.',
      ),
    ),
    'primary key' => array('store_id'),
   
  );
  return $schema;
}

/**
 * Add product information to product_weight field.
 */
function fm_commerce_store_update_7000() {
  // Check because D6 installs may already have added this.
  $query = new EntityFieldQuery();
	$query->entityCondition('entity_type', 'commerce_product')
	      ->entityCondition('bundle', 'fm_fashion_product');
	      
	      
	$products = $query->execute();
	$products_ret = array();
	if(isset($products['commerce_product'])) {
    foreach($products['commerce_product'] as $product_id => $product) {
      $product = commerce_product_load($product_id);
      $product_wrapper = entity_metadata_wrapper('commerce_product', $product);
      	$product_wrapper->field_product_weight = 0;
      	commerce_product_save($product);
	  }
	}
}

