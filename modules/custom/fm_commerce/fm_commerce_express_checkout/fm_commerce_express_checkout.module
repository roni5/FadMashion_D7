<?php

/**
 * Implements hook_menu().
 */
function fm_commerce_express_checkout_menu() {
	
	$items['express-checkout'] = array(
    'page callback' => 'fm_commerce_express_checkout_page',
	  'access arguments' => array('view express checkout'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function fm_commerce_express_checkout_permission() {
  return array(
    'view express checkout' => array(
      'title' => t('View Express Checkout Page'),
    ),
  );
}
function fm_commerce_express_checkout_page() {
	
	return drupal_get_form('fm_commerce_express_checkout_form');
}


function fm_commerce_express_checkout_form($form, $form_state) {

  global $user;
    
  $order = commerce_cart_order_load($user->uid);
  
  /* ADD Shipping Profile to Form */
  $shipping_profile = commerce_customer_profile_new('shipping', $order->uid);
  
  $form['shipping_customer_profile'] = array(
    '#type' => 'value',
    '#value' => $shipping_profile,
  );
  
  // Add the field widgets for the profile.
  field_attach_form('commerce_customer_profile', $shipping_profile, $form, $form_state);

  // Tweak the form to remove the fieldset from Shipping address fields.
  $field_name = 'field_shipping_address';
  $language = $form[$field_name]['#language'];

  foreach (element_children($form[$field_name][$language]) as $delta) {
    // Don't mess with the "Add another item" button that could be present.
    if ($form[$field_name][$language][$delta]['#type'] != 'submit') {
      $form[$field_name][$language][$delta]['#type'] = 'container';
    }
    
    $form[$field_name][$language][$delta]['name_line']['#weight'] = -6;
    $form[$field_name][$language][$delta]['country']['#weight'] = -5;
    $form[$field_name][$language][$delta]['country']['#disabled'] = TRUE;
    
    $form[$field_name][$language][$delta]['postal_code']['#attributes'] = array('class' => array('narrow'));
    $form[$field_name][$language][$delta]['administrative_area']['#attributes'] = array('class' => array('narrow'));

    $form[$field_name][$language][$delta]['thoroughfare']['#title'] = t('Address 1');
    $form[$field_name][$language][$delta]['thoroughfare']['#prefix'] = '<br clear="all">';
    
    $form[$field_name][$language][$delta]['premise']['#title'] = t('Address 2');
    
    $form[$field_name][$language][$delta]['locality']['#prefix'] = '<br clear="all">';
  }
  
  $form['saveto'] = array(
    '#type' => 'checkbox',
    '#title' => t('Save To Address Book?'),
    '#default_value' => true
  );
  
  /* Add BILLING Profile to Form */
  $billing_profile = commerce_customer_profile_new('billing', $order->uid);
  
  $form['billing_customer_profile'] = array(
    '#type' => 'value',
    '#value' => $billing_profile,
  );
  
  // Add the field widgets for the profile.
  field_attach_form('commerce_customer_profile', $billing_profile, $form, $form_state);

  // Make custom changes to Billing Profile Form
  $field_name = 'commerce_customer_address';
  $language = $form[$field_name]['#language'];

  foreach (element_children($form[$field_name][$language]) as $delta) {
  	if ($form[$field_name][$language][$delta]['#type'] != 'submit') {
      $form[$field_name][$language][$delta]['#type'] = 'container';
    }
    
     unset($form[$field_name][$language][$delta]['name_line']);
    unset($form[$field_name][$language][$delta]['country']);
    
    $form[$field_name][$language][$delta]['postal_code']['#attributes'] = array('class' => array('narrow'));
    $form[$field_name][$language][$delta]['administrative_area']['#attributes'] = array('class' => array('narrow'));

    $form[$field_name][$language][$delta]['thoroughfare']['#title'] = t('Address 1');
    $form[$field_name][$language][$delta]['premise']['#title'] = t('Address 2');
  }
  
  /* ADD Credit card form */
  module_load_include('inc', 'commerce_payment', 'includes/commerce_payment.credit_card');
  $form['payment_details'] = commerce_payment_credit_card_form(array('code' => '', 'owner' => '', 'type' => '' ));
  
  //CHANGE default form theme stuff
  $form['payment_details']['credit_card']['owner'] ['#title'] = t('Name on Credit Card');
  $form['payment_details']['credit_card']['owner'] ['#weight'] = -5;
  $form['payment_details']['credit_card']['exp_month'] ['#attributes'] = array('class' => array('narrow'));
  $form['payment_details']['credit_card']['exp_year'] ['#attributes'] = array('class' => array('narrow'));
  $form['payment_details']['credit_card']['code']['#attributes'] = array('class' => array('narrow'));
  
  
  $form['complete_purchase'] = array(
    '#type' => 'submit',
    '#value' => t('Complete Purchase'),
    '#attributes' => array('class' => array('red'))
  );
  
  // Get the path to the module
  $path = drupal_get_path('module', 'fm_commerce_express_checkout');
  //  Attach the CSS and JS to the form
  $form['#attached'] = array(
      'js' => array
      (
          'type' => 'file',
          'data' => $path . '/fm_commerce_express_checkout.js',
      ),
  );
  

  return $form;
  
  
}

function fm_commerce_express_checkout_form_validate($form, $form_state) {
  module_load_include('inc', 'commerce_payment', 'includes/commerce_payment.credit_card');

  // Validate the credit card fields.
  $settings = array(
    'form_parents' => array_merge($form_parents, array('credit_card')),
  );

  if (!commerce_payment_credit_card_validate($pane_values['credit_card'], $settings)) {
    return FALSE;
  }
}

function fm_commerce_express_checkout_form_submit($form, $form_state) {

}




function theme_fm_commerce_express_checkout_form($variables)
{
    // Isolate the form definition form the $variables array
    $form = $variables['form'];
    
    //DISPLAY Shipping information on Form
    $field_name = 'field_shipping_address';
    $language = $form[$field_name]['#language'];
    
    $output = '<div id="shipping" class="checkoutPanel">';
    $output .= '<div class="header"><div class="pad">
                  <div class="dropdown"><span>Address Book:</span> <select id="edit-customer-profile-billing-commerce-customer-address-und-0-country" name="customer_profile_billing[commerce_customer_address][und][0][country]" class="form-select required ajax-processed"><option>2310 E. Huntingdon St.</option></select></div>
                  Shipping Information
                </div></div>';
    $output .= '<div class="form">';
    
   // $output .= '<div class="asterik"><span>*</span> = required</div>';
    $output .= drupal_render($form[$field_name]); 
    $output .= '<div class="saveTo">' . drupal_render($form['saveto']) . '</div>';
    $output .= '</div>';
    
    $output .= '</div>';
    
    $field_name = 'commerce_customer_address';
    $language = $form[$field_name]['#language'];
    
    $output .= '<div class="checkoutPanel">';
    $output .= '<div class="header"><div class="pad">
                  <div class="dropdown"><span>Address Book:</span> <select id="edit-customer-profile-billing-commerce-customer-address-und-0-country" name="customer_profile_billing[commerce_customer_address][und][0][country]" class="form-select required ajax-processed"><option>2310 E. Huntingdon St.</option></select></div>
                  Billing Information
                </div></div>';
    
    $output .= '<div id="billing">';
    $output .= '<div class="form">';
    $output .= drupal_render($form['payment_details']); 
    $output .= '</div>';
    
    $output .= '<div class="billingAddress">';
    $output .= t('Billing Address');
    $output .= '<div class="sameAddress"><input checked="checked" type="checkbox" id="edit-billing-info" name="revision" value="1" class="form-checkbox">  <label class="option" for="edit-revision">Same as shipping address </label></div>';
    $output .= drupal_render_children($form[$field_name]); 
    $output .= '</div>';
    $output .= '</div>';
    
    
    $output .= '</div>';

    $output .= '<div class="checkoutFooter"><div class="completeOrder">';
    $output .= drupal_render_children($form); 
    $output .= '<br clear="all">Your credit card will be charged $325.00</div></div>';
    
    // return the output
    return $output;
}

function fm_commerce_express_checkout_theme($variables)
{
    return array
    (
        'fm_commerce_express_checkout_form' => array(
            'render element' => 'form',
        ),
    );
}
