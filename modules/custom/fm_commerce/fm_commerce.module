<?php

/**
 * Implements hook_form_alter().
 * 
 * Change the Add to Cart form to add Colors/Sizes and custom Submit function
 */
function fm_commerce_form_alter(&$form, $form_state, $form_id) {
	
	$posi = strpos($form_id, 'commerce_cart_add_to_cart_form');  
  if (is_numeric($posi)){
  	
  	drupal_add_library('jquery_plugin', 'validate');
  	
  	$node = $form_state['build_info']['args']['4']['options']['entity'];
	  $product = fm_deals_get_product($node);
	  
	  $colors = fm_commerce_color_options($product);
	  $sizes = fm_commerce_color_options($product);
	  
	  //ADD color options to cart form
	  if (count($colors) > 1) {
	    $form['colors'] = array(
	       '#type' => 'select',
	       '#title' => t('Select Colors'),
	       '#options' => $colors,
         '#weight' => -1,
	      '#attributes' => array('size' => count($colors))
	    );
	  }
    if (count($sizes) > 1) {
	    $form['sizes'] = array(
	       '#type' => 'select',
	       '#title' => t('Select Sizes'),
	       '#options' => $sizes,
         '#weight' => -5,
	       '#attributes' => array('size' => count($sizes))
	    );
	  }
	   
	  if(count($colors) > 1 || count($sizes) > 1) {
	    $form['#attached']['js'] = array(
        drupal_get_path('module', 'fm_commerce_color') . '/fm_commerce_color.js',
        drupal_get_path('theme', 'fadmashion_commerce') . '/js/jquery.selectBox.min.js'
      );
	  }
	  
	  $form['#id'] = "commerce-cart-add-to-cart-form";
	  
		$form['submit']['#value'] = "Purchase Now";
		$form['submit']['#attributes'] = array(
		  'class' => array('red')
    );
		$form['#submit'][] = 'fm_commerce_cart_submit';
  }
}

//REDIRECTS Deals page TO STEP 2 after submit
function fm_commerce_cart_submit ($form, &$form_state) {
	$node_entity = $form_state['values']['display_uri']['options']['entity'];
	var_dump($node_entity->nid);
	exit();
   //code here
   //$form_state['redirect'] = 'checkout'; 
}

function fm_commerce_color_options($product) {
	$images = field_get_items('commerce_product', $product, 'field_images');
	
	$colors = array();
	foreach($images as $pos => $image) {
		//check if it isn't 
		if(!empty($image['fm_commerce_color_hex'])  && $image['fm_commerce_color_hex'] != 'ffffff') {
		  $colors[$image['fm_commerce_color_hex']] = $pos;
		  
		}
	}
	return $colors;
}

function fm_commerce_size_options($product) {
	
	$product_sizes = field_get_items('commerce_product', $product, 'field_product_sizes');
  $tableData = $product_sizes[0]['tabledata'];
  $header = $tableData[0];
	
	$sizes = array();
	foreach($header as $pos => $size) {
		//check if it isn't 
		if($size != '') {
		  $sizes[$size] = $size;
		} 
	}
	return $sizes;
}
