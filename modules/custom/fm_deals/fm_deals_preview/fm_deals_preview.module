<?php

define(PREVIEW_SPOTS, 6);

/**
 * Implements hook_menu().
 */
function fm_deals_preview_menu() {
	
	$items['deals_preview'] = array(
    'page callback' => 'fm_deals_preview_page',
	  'access arguments' => array('view deals'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  
  return $items;
}

/**
 * Implements main ajax call back for preview deals window
 */
function fm_deals_preview_page() {
	print fm_deals_preview_page_content();
	exit;
}

/**
 * Implements main content for preview deals window
 */
function fm_deals_preview_page_content() {

	$nodes = fm_deals_preview_nodes();
	$rendered_items = array();
	
	foreach($nodes as $node) {
		$product = fm_commerce_get_product($node);
    $store = fm_commerce_get_store($product);  
		$themed_image = fm_deals_preview_get_image($product);
		
		node_build_content($node);
		
		//Add the percentage savings
		$sale_price = field_get_items('node', $node, 'field_sale_price');
		$sale_price = $sale_price[0]['amount'];
 		
		$original_price = field_get_items('commerce_product', $product, 'commerce_price');
		$original_price = $original_price[0]['amount'];
		
    $raw_value = round(1 - ($sale_price/$original_price), 2);
    $value = ($raw_value * 100). '%';
    $node->sale_percentage = $value;
    
    //Check for what state the item is in and attach to node
    $status = fm_deals_states_get_status($node);
    $node->deal_status = $status;
      
		$rendered_items[] = theme('fm_deals_preview_item', array('node' => $node, 'store' => $store, 'image' => $themed_image));
	}
	
	//$rendered_items[] = theme('fm_deals_preview_social_item', array('nextDate' => $date));
	
	$output = theme('fm_deals_preview_week', array('date' => $date, 'items' => $rendered_items));
	return $output;
}


function fm_deals_preview_nodes() {
	
	//Get nid from the schedule page that falls under the 
	$next_hour_start_time = mktime(date('G', REQUEST_TIME), 0, 0, date('m', REQUEST_TIME), date('d', REQUEST_TIME), date('y', REQUEST_TIME));
	$i = 0;
	$ret = array();
	while($i < PREVIEW_SPOTS + 1) {
		//Get nid from the schedule page that falls under the 
	   $results = db_query('SELECT * FROM {fm_deals_schedule} WHERE startTime = :start_time', array(':start_time' => $next_hour_start_time))->fetchObject();
	   if(empty($results)) {
	   	  do {
	   	    $nids = fm_deals_random_nids(1);
	   	    $nid = array_shift($nids);
	   	  } while (isset($ret[$nid]));
	   	  
	   	  $time_slot = fm_deals_time_slots(1, $next_hour_start_time);
	      fm_deals_insert_schedule($time_slot, array($nid => $nid));
	      
	      $ret[$nid] = $nid;
	      
	   } else{
	   	$ret[$results->nid] = $results->nid;
	   }
		
		$next_hour_start_time = mktime(date('G', $next_hour_start_time)+1, 0, 0, date('m', $next_hour_start_time), date('d', $next_hour_start_time), date('y', $next_hour_start_time));
		$i++;
	}
	
	//pop off the first one because it would be the current one and not the preview one
	array_shift($ret);
	
	return node_load_multiple($ret);
}

/**
 * Implements hook_theme().
 */
function fm_deals_preview_theme() {
	return array(
    'fm_deals_preview_block' => array(
	     'variables' => array('node' => NULL, 'product' => NULL, 'store' => NULL, 'image' => ''),
       'template' => 'fm_deals_preview_block'
    ),
    'fm_deals_preview_item' => array(
	     'variables' => array('node' => NULL, 'store' => NULL, 'image' => ''),
       'template' => 'fm_deals_preview_item'
    ),
    'fm_deals_preview_social_item' => array(
	     'variables' => array('nextDate' => ''),
       'template' => 'fm_deals_preview_social_item'
    ),
    'fm_deals_preview_week' => array(
	     'variables' => array('date' => '', 'items' => array()),
       'template' => 'fm_deals_preview_week'
    ),
  );
}

/*
 * implements hook_block_info()
 */
function fm_deals_preview_block_info() {
	$blocks = array();
	
	//Define the Preview Block
	$blocks['fm_deals_preview'] = array(
	  'info' => t('Preview Deals'),
	  'cache' => DRUPAL_NO_CACHE
	);
	return $blocks;
}

/*
 * Implements hook_block_view
 */
function fm_deals_preview_block_view($block_name = '') {
  if($block_name == 'fm_deals_preview') {
  	
  	$this_nid = arg(1);
  	$default_nid = fm_deals_get_default_deal();
  	$status = $default['status'];
  	
  	if($this_nid == $default_nid) {
  		$nid = fm_deals_preview_block_nid();
  		$header = '<h2 class="rounded-top">' . t('Coming up Next') .'</h2>';
		}
		else {
			$nid = $default_nid;
			if($status == 'active') {
			  $header = '<h2 class="rounded-top" style="background-color: #B83838;">On Sale Now!</h2>';
			}
			else if($status == 'upcoming'){
				$header = '<h2 class="rounded-top">' . t('Upcoming Deal') .'</h2>';
			}
		  else {
				$header = '<h2 class="rounded-top">' . t('Last Deal') .'</h2>';
			}
		}
		
	
  	$content = $header . fm_deals_preview_block_content($nid);
    $block = array(
      'content' => $content
    );
  }
  return $block;
}

function fm_deals_preview_block_nid() {
	
	//Get nid from the schedule page that falls under the 
	$results = db_query('SELECT * FROM {fm_deals_schedule} WHERE startTime > :request_time ORDER BY startTime ASC', array(':request_time' => REQUEST_TIME))->fetchObject();
	
 if(empty($results)) {
 	  $next_hour_time = mktime(date('G', REQUEST_TIME)+1, 0, 0, date('m', REQUEST_TIME), date('d', REQUEST_TIME), date('y', REQUEST_TIME));
		$time_slot = fm_deals_time_slots(1, $next_hour_time);
	  $nids = fm_deals_random_nids(1);
	  fm_deals_insert_schedule($time_slot, $nids);
	  return array_shift($nids);
	} else {
		return $results->nid;
	}
	
}

function fm_deals_preview_block_content($nid) {
  $node = node_load($nid);
    
  $product = fm_commerce_get_product($node);
  $store = fm_commerce_get_store($product);  
    
  $themed_image = fm_deals_preview_get_image($product);    
  return theme('fm_deals_preview_block', array('node' => $node, 'product' => $product, 'store' => $store, 'image' => $themed_image));
}

function fm_deals_preview_get_image($product) {
	$images = field_get_items('commerce_product', $product, 'field_product_images');
	//Get First Image
  $first_image = node_load($images[0]['nid']);
  
  $first_image = field_get_items('node', $first_image, 'field_product_image');
  $first_image = $first_image[0];
  
  $image = array(
      'path' => $first_image['uri'],
      'alt' => $first_image['alt'],
      'title' => $first_image['title'],
      'attributes' => array('class' => 'itemThumb'),
      'style_name' => 'fm_preview_block_thumb'
  );
  
  return theme('image_style', $image);
   
}
